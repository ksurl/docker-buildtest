name: build

on:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      #- name: Actions Start Discord
      #  uses: sarisia/actions-status-discord@v1
      #  if: always()
      #  with:
      #    webhook: ${{ secrets.DISCORD_WEBHOOK }}
      #    title: "Starting new build"
      #    noprefix: true
      #    color: 0xf5d442

      - name: Actions Start Ntfy
        run: |
          curl \
            -u ${{ secrets.NTFY_CRED }} \
            -H "Title: Build status" \
            -H "Content-Type: text/plain" \
            -d $'Repo: ${{ github.repository }}\nCommit: ${{ github.sha }}\nRef: ${{ github.ref }}\nStatus: ${{ job.status }}\nWorkflow started' \
            ${{ secrets.NTFY_URL }}
      
      - name: Prepare Pushover url
        id: url
        run: |
          URL="https://github.com/${GITHUB_REPOSITORY}/commit/${{ github.sha }}/checks"
          echo "pushover_url=$URL" >> $GITHUB_ENV

      - name: Actions Start Pushover
        uses: umahmood/pushover-actions@main
        env:
          PUSHOVER_TOKEN: ${{ secrets.PUSHOVER_TOKEN }}
          PUSHOVER_USER: ${{ secrets.PUSHOVER_USER }}
        with:
          status: ${{ job.status }}
          title: "Build Status"
          message: "Workflow started"
          url: "${{ env.pushover_url }}"
          url_title: "build"

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Prepare docker image name
        id: image_names
        run: |
          IMAGES="${GITHUB_REPOSITORY/docker-/},ghcr.io/${GITHUB_REPOSITORY/docker-/}"
          echo "docker_images=$IMAGES" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.docker_images }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major.minor}}
            type=semver,pattern={{major}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}

      - name: Build Changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v3
        with:
          commitMode: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          body: ${{ steps.changelog.outputs.changelog }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      #- name: Actions Status Discord
      #  uses: sarisia/actions-status-discord@v1
      #  if: always()
      #  with:
      #    webhook: ${{ secrets.DISCORD_WEBHOOK }}

      - name: Actions Status Pushover
        uses: umahmood/pushover-actions@main
        env:
          PUSHOVER_TOKEN: ${{ secrets.PUSHOVER_TOKEN }}
          PUSHOVER_USER: ${{ secrets.PUSHOVER_USER }}
        with:
          status: ${{ job.status }}
          title: "Build status"
          message: "Workflow completed"
          url: "https://github.com/${GITHUB_REPOSITORY}/commits/${{ steps.sha.outputs.sha }}/checks"
          url_title: "build"

      - name: Actions Status Ntfy
        run: |
          curl \
            -u ${{ secrets.NTFY_CRED }} \
            -H "Title: Build status" \
            -H "Content-Type: text/plain" \
            -d $'Repo: ${{ github.repository }}\nCommit: ${{ github.sha }}\nRef: ${{ github.ref }}\nStatus: ${{ job.status }}\nWorkflow completed' \
            ${{ secrets.NTFY_URL }}