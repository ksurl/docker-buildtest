name: build

on:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     platform:
    #       - linux/amd64
    #       - linux/arm
    #       - linux/arm64
    steps:
      - name: Actions Start Ntfy
        run: |
          ntfy_message=$(cat << EOF
          Repo: ${{ github.repository }}
          Commit: ${{ github.sha }}
          Ref: ${{ github.ref }}
          Workflow started
          EOF
          )
          curl \
            -H "Authorization: Bearer ${{ secrets.NTFY_TOKEN }}" \
            -H "Title: Build status" \
            -H "Content-Type: text/plain" \
            -d "$ntfy_message" \
            ${{ secrets.NTFY_URL }}

      - name: Actions Start Pushover
        run: |
          pushover_message=$(cat << EOF
          Repo: ${{ github.repository }}
          Commit: ${{ github.sha }}
          Ref: ${{ github.ref }}
          EOF
          )          
          curl -s \
            --form-string "token=${{ secrets.PUSHOVER_TOKEN }}" \
            --form-string "user=${{ secrets.PUSHOVER_USER }}" \
            --form-string "title=Build started" \
            --form-string "message=$pushover_message" \
            https://api.pushover.net/1/messages.json

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Prepare docker image name
        id: image_names
        run: |
          IMAGES="${GITHUB_REPOSITORY/docker-/},ghcr.io/${GITHUB_REPOSITORY/docker-/}"
          echo "docker_images=$IMAGES" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.docker_images }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major.minor}}
            type=semver,pattern={{major}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # - name: Prep cache
      #   run: |
      #     platform=${{ matrix.platform }}
      #     platform=${platform//\//-}
      #     echo "platform=$platform" >> $GITHUB_ENV

      - name: Build image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          platforms: linux/amd64,linux/arm,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}
          
      - name: Build Changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          commitMode: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          body: ${{ steps.changelog.outputs.changelog }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Actions Status Pushover
        run: |
          pushover_message=$(cat << EOF
          Repo: ${{ github.repository }}
          Commit: ${{ github.sha }}
          Ref: ${{ github.ref }}
          EOF
          )          
          curl -s \
          --form-string "token=${{ secrets.PUSHOVER_TOKEN }}" \
          --form-string "user=${{ secrets.PUSHOVER_USER }}" \
          --form-string "title=Build status" \
          --form-string "message=${{ env.pushover_message }}" \
          https://api.pushover.net/1/messages.json

      - name: Actions Status Ntfy
        run: |
          ntfy_message=$(cat << EOF
          Repo: ${{ github.repository }}
          Commit: ${{ github.sha }}
          Ref: ${{ github.ref }}
          Status: ${{ job.status }}
          Workflow completed
          EOF
          )
          curl \
            -H "Authorization: Bearer ${{ secrets.NTFY_TOKEN }}" \
            -H "Title: Build status" \
            -H "Content-Type: text/plain" \
            -d "$ntfy_message" \
            ${{ secrets.NTFY_URL }}
